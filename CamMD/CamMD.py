 # -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'CamMD.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
import cv2, numpy as np
from CamMDdb import find_wound

label_list = set() # Global label_list lololol
disease = "" # global disease so we can import
step_1 = "" # global step 1
step_2 = "" # global step 2

class Ui_MainWindow(object):
    """MAIN WINDOW"""


    def __init__(self):   
        self.Worker1 = Worker1()
        self.Worker1.start()
        self.Worker1.update_image.connect(self.image_update_slot)

    def open_window(self):
        self.window = QtWidgets.QMainWindow()
        self.ui = Ui_TreatmentsWindow()
        self.ui.setupUi(self.window)
        self.window.show()
        MainWindow.hide()
        
        

    def scan_now(self):
        global step_1
        global step_2

        self.Worker1.stop()
        label_list_final = label_list
        print(f"This is your final label list {label_list_final}")
        if 'blister' in label_list_final:
                disease = "BLISTER" # use this to search
                self.severity_message.setText("Don’t worry! You don’t have to go see a doctor yet. We’ve got you covered right here!")
                self.severity.setText("SEVERITY: MILD")
                self.output_disease.setText(disease)
                s1, s2 = find_wound(disease)
                step_1 = s1
                step_2 = s2 
        if 'rashes' in label_list_final:
                disease = "RASHES" # use this to search
                self.severity_message.setText("Don’t worry! You don’t have to go see a doctor yet. We’ve got you covered right here!")
                self.severity.setText("SEVERITY: MODERATE")
                self.output_disease.setText(disease)

                find_wound(disease)
                s1, s2 = find_wound(disease)
                step_1 = s1
                step_2 = s2               
        else:
                self.di.setText("NONE FOUND")
        
    def image_update_slot(self, image):
        self.camera_box.setPixmap(QtGui.QPixmap.fromImage(image))

    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1059, 615)
        MainWindow.setAutoFillBackground(False)
        MainWindow.setStyleSheet("background-color: #007EA7;\n"
"\n"
"")
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.header_rectangle = QtWidgets.QLabel(self.centralwidget)
        self.header_rectangle.setGeometry(QtCore.QRect(0, 0, 1071, 91))
        self.header_rectangle.setStyleSheet("background-color: #022738;")
        self.header_rectangle.setText("")
        self.header_rectangle.setObjectName("header_rectangle")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(0, 10, 291, 81))
        self.label.setText("")
        self.label.setPixmap(QtGui.QPixmap("logo.png"))
        self.label.setObjectName("label")
        self.camera_box = QtWidgets.QLabel(self.centralwidget)
        self.camera_box.setGeometry(QtCore.QRect(40, 140, 521, 403))
        self.camera_box.setStyleSheet("background-color: white;")
        self.camera_box.setObjectName("camera_box")
        self.line = QtWidgets.QFrame(self.centralwidget)
        self.line.setGeometry(QtCore.QRect(610, 250, 271, 6))
        self.line.setStyleSheet("background-color: #212121;\n"
"border-radius: 50px;\n"
"")
        self.line.setLineWidth(1)
        self.line.setFrameShape(QtWidgets.QFrame.HLine)
        self.line.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line.setObjectName("line")
        self.severity = QtWidgets.QLabel(self.centralwidget)
        self.severity.setGeometry(QtCore.QRect(610, 210, 281, 41))
        font = QtGui.QFont()
        font.setFamily("Poppins")
        font.setPointSize(20)
        self.severity.setFont(font)
        self.severity.setStyleSheet("background-color: none;")
        self.severity.setObjectName("severity")
        self.output_disease = QtWidgets.QLabel(self.centralwidget)
        self.output_disease.setGeometry(QtCore.QRect(590, 140, 311, 41))
        font = QtGui.QFont()
        font.setFamily("Poppins")
        font.setPointSize(16)
        self.output_disease.setFont(font)
        self.output_disease.setStyleSheet("background-color: #E5E5E5;\n"
"border-radius: 8px;\n"
"text-align: center;\n"
"padding: 5px;\n"
"\n"
"")
        self.output_disease.setObjectName("output_disease")
        self.treat = QtWidgets.QPushButton(self.centralwidget)
        self.treat.setGeometry(QtCore.QRect(750, 420, 141, 51))
        font = QtGui.QFont()
        font.setFamily("Poppins")
        font.setPointSize(18)
        self.treat.setFont(font)
        self.treat.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.treat.setStyleSheet("border-radius: 17px;\n"
"background-color: #09BC5B; \n"
"color: white;\n"
"")
        self.treat.setObjectName("treat")
        self.treat.clicked.connect(self.open_window)
        font = QtGui.QFont()
        font.setFamily("Poppins")
        font.setPointSize(16)
        self.cancel = QtWidgets.QPushButton(self.centralwidget)
        self.cancel.setGeometry(QtCore.QRect(590, 490, 311, 51))
        font = QtGui.QFont()
        font.setFamily("Poppins")
        font.setPointSize(16)
        self.cancel.setFont(font)
        self.cancel.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.cancel.setStyleSheet("border-radius: 17px;\n"
"background-color: #022738; \n"
"color: white;\n"
"")
        self.cancel.setObjectName("cancel")
        self.cancel.clicked.connect(self.scan_now) #connect to cancel
        self.label_6 = QtWidgets.QLabel(self.centralwidget)
        self.label_6.setGeometry(QtCore.QRect(890, 140, 161, 401))
        self.label_6.setText("")
        self.label_6.setPixmap(QtGui.QPixmap("doctor_asset.png"))
        self.label_6.setObjectName("label_6")
        self.label_7 = QtWidgets.QLabel(self.centralwidget)
        self.label_7.setGeometry(QtCore.QRect(590, 200, 311, 281))
        font = QtGui.QFont()
        font.setFamily("Poppins")
        font.setPointSize(20)
        self.label_7.setFont(font)
        self.label_7.setStyleSheet("background-color:#E5E5E5;\n"
"border-radius: 17px;\n"
"")
        self.label_7.setText("")
        self.label_7.setObjectName("label_7")
        self.severity_message = QtWidgets.QLabel(self.centralwidget)
        self.severity_message.setGeometry(QtCore.QRect(610, 260, 281, 141))
        font = QtGui.QFont()
        font.setFamily("Poppins")
        font.setPointSize(14)
        self.severity_message.setFont(font)
        self.severity_message.setStyleSheet("background-color: none;")
        self.severity_message.setWordWrap(True)
        self.severity_message.setObjectName("severity_message")
        self.label_6.raise_()
        self.label_7.raise_()
        self.header_rectangle.raise_()
        self.label.raise_()
        self.camera_box.raise_()
        self.line.raise_()
        self.severity.raise_()
        self.output_disease.raise_()
        self.treat.raise_()

        self.cancel.raise_()
        self.severity_message.raise_()
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1059, 21))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        """All the text data that goes into the UI"""
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "CamMD"))
        self.camera_box.setText(_translate("MainWindow", "Stream camera here"))
        self.severity.setText(_translate("MainWindow", "")) # edit severity here
        self.output_disease.setText(_translate("MainWindow", ""))
        self.treat.setText(_translate("MainWindow", "Treat >>>"))
        self.cancel.setText(_translate("MainWindow", "Scan Now"))
        self.severity_message.setText(_translate("MainWindow", ""))

class Worker1(QtCore.QThread): 
        """CLASS TO THREAD CAMERA"""

        update_image = QtCore.pyqtSignal(QtGui.QImage)
        def run(self):
                
                net = cv2.dnn.readNet('yolov3.weights', 'yolov3.cfg')
                classes = []
                with open("coco.names", "r") as f:
                        classes = f.read().splitlines()
                self.ThreadActive = True
                capture = cv2.VideoCapture(0) # Initialize camera
                font = cv2.FONT_HERSHEY_PLAIN
                colors = np.random.uniform(0, 255, size=(100, 3))
                while self.ThreadActive:
                        s, frame = capture.read() # frames for capture
                        height, width, _ = frame.shape
                        blob = cv2.dnn.blobFromImage(frame, 1 / 255, (416, 416), (0, 0, 0), swapRB=True, crop=False)
                        net.setInput(blob)
                        output_layers_names = net.getUnconnectedOutLayersNames()
                        layerOutputs = net.forward(output_layers_names)

                        boxes = []
                        confidences = []
                        class_ids = []

                        for output in layerOutputs:
                            for detection in output:
                                scores = detection[5:]
                                class_id = np.argmax(scores)
                                confidence = scores[class_id]
                                if confidence > 0.2:
                                    center_x = int(detection[0] * width)
                                    center_y = int(detection[1] * height)
                                    w = int(detection[2] * width)
                                    h = int(detection[3] * height)

                                    x = int(center_x - w / 2)
                                    y = int(center_y - h / 2)

                                    boxes.append([x, y, w, h])
                                    confidences.append((float(confidence)))
                                    class_ids.append(class_id)
                        indexes = cv2.dnn.NMSBoxes(boxes, confidences, 0.2, 0.4)
                        if len(indexes) > 0:
                            for i in indexes.flatten():
                                x, y, w, h = boxes[i]
                                label = str(classes[class_ids[i]])
                                label_list.add(label)
                                confidence = str(round(confidences[i], 2))
                                color = colors[i]
                                cv2.rectangle(frame, (x, y), (x + w, y + h), color, 2)
                                cv2.putText(frame, label + " " + confidence, (x, y + 20), font, 2, (255, 255, 255), 2)
                        print(label_list)
                        if s:
                                image = cv2.cvtColor(frame, cv2.COLOR_BGR2RGB)
                                convert_to_qt = QtGui.QImage(image.data, image.shape[1], image.shape[0], QtGui.QImage.Format_RGB888)
                                picture = convert_to_qt.scaled(521, 403, QtCore.Qt.KeepAspectRatio)
                                self.update_image.emit(picture) 
        def stop(self):
                self.ThreadActive = False
                self.quit()
        def stop_getting_list(self):
                self.ThreadActive = False

class Ui_TreatmentsWindow(object):
    """TREATMENTS WINDOW"""

    def change_treatment(self):    
        self.stepbox1.setPlainText(step_1)
        self.stepbox2.setPlainText(step_2)
        print(step_1)
        print(step_2)

    def home(self):
        sys.exit()
        
    def setupUi(self, TreatmentsWindow):
        TreatmentsWindow.setObjectName("TreatmentsWindow")
        TreatmentsWindow.resize(1059, 615)
        TreatmentsWindow.setStyleSheet("background-color: #007EA7;\n"
"\n"
"")
        self.centralwidget = QtWidgets.QWidget(TreatmentsWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.label_3 = QtWidgets.QLabel(self.centralwidget)
        self.label_3.setGeometry(QtCore.QRect(0, 10, 291, 81))
        self.label_3.setText("")
        self.label_3.setPixmap(QtGui.QPixmap("logo.png"))
        self.label_3.setObjectName("label_3")
        self.header_rectangle_2 = QtWidgets.QLabel(self.centralwidget)
        self.header_rectangle_2.setGeometry(QtCore.QRect(0, 0, 1071, 91))
        self.header_rectangle_2.setStyleSheet("background-color: #022738;")
        self.header_rectangle_2.setText("")
        self.header_rectangle_2.setObjectName("header_rectangle_2")
        self.treatment1 = QtWidgets.QPushButton(self.centralwidget)
        self.treatment1.setGeometry(QtCore.QRect(40, 120, 271, 51)) #step_1 = s1 step_2 = s2
        font = QtGui.QFont()
        font.setFamily("Poppins")
        font.setPointSize(16)
        self.treatment1.setFont(font)
        self.treatment1.clicked.connect(self.change_treatment)
        self.treatment1.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.treatment1.setStyleSheet("border-radius: 17px;\n"
"background-color: #E5E5E5; \n"
"\n"
"")
        self.treatment1.setObjectName("treatment1")
        self.treatment2 = QtWidgets.QPushButton(self.centralwidget)
        self.treatment2.setGeometry(QtCore.QRect(40, 180, 271, 51))
        font = QtGui.QFont()
        font.setFamily("Poppins")
        font.setPointSize(16)
        self.treatment2.setFont(font)
        self.treatment2.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.treatment2.setStyleSheet("border-radius: 17px;\n"
"background-color: #E5E5E5; \n"
"\n"
"")
        self.treatment2.setObjectName("treatment2")
        self.treatment4 = QtWidgets.QPushButton(self.centralwidget)
        self.treatment4.setGeometry(QtCore.QRect(40, 300, 271, 51))
        font = QtGui.QFont()
        font.setFamily("Poppins")
        font.setPointSize(16)
        self.treatment4.setFont(font)
        self.treatment4.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.treatment4.setStyleSheet("border-radius: 17px;\n"
"background-color: #E5E5E5; \n"
"\n"
"")
        self.treatment4.setObjectName("treatment4")
        self.treatment3 = QtWidgets.QPushButton(self.centralwidget)
        self.treatment3.setGeometry(QtCore.QRect(40, 240, 271, 51))
        font = QtGui.QFont()
        font.setFamily("Poppins")
        font.setPointSize(16)
        self.treatment3.setFont(font)
        self.treatment3.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.treatment3.setStyleSheet("border-radius: 17px;\n"
"background-color: #E5E5E5; \n"
"\n"
"")
        self.treatment3.setObjectName("treatment3")
        self.treatment6 = QtWidgets.QPushButton(self.centralwidget)
        self.treatment6.setGeometry(QtCore.QRect(40, 420, 271, 51))
        font = QtGui.QFont()
        font.setFamily("Poppins")
        font.setPointSize(16)
        self.treatment6.setFont(font)
        self.treatment6.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.treatment6.setStyleSheet("border-radius: 17px;\n"
"background-color: #E5E5E5; \n"
"\n"
"")
        self.treatment6.setObjectName("treatment6")
        self.treatment5 = QtWidgets.QPushButton(self.centralwidget)
        self.treatment5.setGeometry(QtCore.QRect(40, 360, 271, 51))
        font = QtGui.QFont()
        font.setFamily("Poppins")
        font.setPointSize(16)
        self.treatment5.setFont(font)
        self.treatment5.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.treatment5.setStyleSheet("border-radius: 17px;\n"
"background-color: #E5E5E5; \n"
"\n"
"")
        self.treatment5.setObjectName("treatment5")
        self.back_home = QtWidgets.QPushButton(self.centralwidget)
        self.back_home.setGeometry(QtCore.QRect(40, 480, 271, 51))
        font = QtGui.QFont()
        font.setFamily("Poppins")
        font.setPointSize(16)
        self.back_home.setFont(font)
        self.back_home.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.back_home.setStyleSheet("border-radius: 17px;\n"
"background-color: #CB3B3B; \n"
"color: white;\n"
"\n"
"\n"
"\n"
"")
        self.back_home.setObjectName("back_home")
        self.back_home.clicked.connect(self.home)
        self.stepbox1 = QtWidgets.QPlainTextEdit(self.centralwidget)
        self.stepbox1.setGeometry(QtCore.QRect(360, 190, 661, 91))
        font = QtGui.QFont()
        font.setFamily("Poppins")
        font.setPointSize(11)
        self.stepbox1.setFont(font)
        self.stepbox1.setStyleSheet("background-color: #E5E5E5; border-radius: 15px;")
        self.stepbox1.setObjectName("stepbox1")
        self.first_step = QtWidgets.QLabel(self.centralwidget)
        self.first_step.setGeometry(QtCore.QRect(370, 120, 131, 61))
        font = QtGui.QFont()
        font.setFamily("Poppins")
        font.setPointSize(20)
        self.first_step.setFont(font)
        self.first_step.setStyleSheet("background-color: #09BC5B;\n"
"border-radius: 15px;\n"
"padding: 15px;\n"
"color: white;\n"
"\n"
"")
        self.first_step.setObjectName("first_step")
        self.second_step = QtWidgets.QLabel(self.centralwidget)
        self.second_step.setGeometry(QtCore.QRect(370, 300, 131, 61))
        font = QtGui.QFont()
        font.setFamily("Poppins")
        font.setPointSize(20)
        self.second_step.setFont(font)
        self.second_step.setStyleSheet("background-color: #09BC5B;\n"
"border-radius: 15px;\n"
"padding: 15px;\n"
"color: white;\n"
"\n"
"\n"
"")
        self.second_step.setObjectName("second_step")
        self.stepbox2 = QtWidgets.QPlainTextEdit(self.centralwidget)
        self.stepbox2.setGeometry(QtCore.QRect(360, 370, 661, 101))
        font = QtGui.QFont()
        font.setFamily("Poppins")
        font.setPointSize(11)
        self.stepbox2.setFont(font)
        self.stepbox2.setStyleSheet("background-color: #E5E5E5; border-radius: 15px;")
        self.stepbox2.setObjectName("stepbox2")
        self.page_back = QtWidgets.QPushButton(self.centralwidget)
        self.page_back.setGeometry(QtCore.QRect(360, 480, 61, 51))
        font = QtGui.QFont()
        font.setFamily("Poppins")
        font.setPointSize(16)
        self.page_back.setFont(font)
        self.page_back.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.page_back.setStyleSheet("border-radius: 17px;\n"
"background-color: #022738; \n"
"color: white;\n"
"\n"
"\n"
"\n"
"")
        self.page_back.setObjectName("page_back")
        self.page_forward = QtWidgets.QPushButton(self.centralwidget)
        self.page_forward.setGeometry(QtCore.QRect(950, 480, 61, 51))
        font = QtGui.QFont()
        font.setFamily("Poppins")
        font.setPointSize(16)
        self.page_forward.setFont(font)
        self.page_forward.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.page_forward.setStyleSheet("border-radius: 17px;\n"
"background-color: #022738; \n"
"color: white;\n"
"\n"
"\n"
"\n"
"")
        self.page_forward.setObjectName("page_forward")
        self.header_rectangle_2.raise_()
        self.label_3.raise_()
        self.treatment1.raise_()
        self.treatment2.raise_()
        self.treatment4.raise_()
        self.treatment3.raise_()
        self.treatment6.raise_()
        self.treatment5.raise_()
        self.back_home.raise_()
        self.stepbox1.raise_()
        self.first_step.raise_()
        self.second_step.raise_()
        self.stepbox2.raise_()
        self.page_back.raise_()
        self.page_forward.raise_()
        TreatmentsWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(TreatmentsWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1059, 21))
        self.menubar.setObjectName("menubar")
        TreatmentsWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(TreatmentsWindow)
        self.statusbar.setObjectName("statusbar")
        TreatmentsWindow.setStatusBar(self.statusbar)

        self.retranslateUi(TreatmentsWindow)
        QtCore.QMetaObject.connectSlotsByName(TreatmentsWindow)

    def retranslateUi(self, TreatmentsWindow):
        _translate = QtCore.QCoreApplication.translate
        TreatmentsWindow.setWindowTitle(_translate("TreatmentsWindow", "Treatments"))
        self.treatment1.setText(_translate("TreatmentsWindow", "Treatment 1"))
        self.treatment2.setText(_translate("TreatmentsWindow", "Treatment 2"))
        self.treatment4.setText(_translate("TreatmentsWindow", "Treatment 4"))
        self.treatment3.setText(_translate("TreatmentsWindow", "Treatment 3"))
        self.treatment6.setText(_translate("TreatmentsWindow", "Treatment 6"))
        self.treatment5.setText(_translate("TreatmentsWindow", "Treatment 5"))
        self.back_home.setText(_translate("TreatmentsWindow", "Quit"))
        self.stepbox1.setPlainText(_translate("TreatmentsWindow", ""))
        self.first_step.setText(_translate("TreatmentsWindow", "Step 1:"))
        self.second_step.setText(_translate("TreatmentsWindow", "Step 2:"))
        self.stepbox2.setPlainText(_translate("TreatmentsWindow", ""))
        self.page_back.setText(_translate("TreatmentsWindow", "<<"))
        self.page_forward.setText(_translate("TreatmentsWindow", ">>"))



if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
